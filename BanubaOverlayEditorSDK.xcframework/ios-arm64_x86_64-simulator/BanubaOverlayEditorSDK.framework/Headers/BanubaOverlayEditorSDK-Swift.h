#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef BANUBAOVERLAYEDITORSDK_SWIFT_H
#define BANUBAOVERLAYEDITORSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BanubaOverlayEditorSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




/// The Interactive question configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK27EditorQuestionConfiguration")
@interface EditorQuestionConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK28EditorQuestionViewController")
@interface EditorQuestionViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






/// The Interactive interest configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK32InteractiveInterestConfiguration")
@interface InteractiveInterestConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The Interactive interest search provider
SWIFT_PROTOCOL("_TtP22BanubaOverlayEditorSDK27InteractiveInterestProvider_")
@protocol InteractiveInterestProvider
/// Search matching text
- (void)searchTitle:(NSString * _Nonnull)title;
/// Handler used to get searching result
@property (nonatomic, copy) void (^ _Nullable resultHandler)(NSArray<NSString *> * _Nonnull);
@end


SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK33InteractiveInterestViewController")
@interface InteractiveInterestViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;

@interface InteractiveInterestViewController (SWIFT_EXTENSION(BanubaOverlayEditorSDK)) <UITextFieldDelegate>
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end







SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK31InteractivePickerViewController")
@interface InteractivePickerViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// The Interactive poll configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK28InteractivePollConfiguration")
@interface InteractivePollConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK29InteractivePollViewController")
@interface InteractivePollViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end







/// The Interactive test configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK28InteractiveTestConfiguration")
@interface InteractiveTestConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK29InteractiveTestViewController")
@interface InteractiveTestViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@class UITextView;

@interface InteractiveTestViewController (SWIFT_EXTENSION(BanubaOverlayEditorSDK)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
@end



@class InteractivesPickerConfiguration;

/// The Interactives configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK25InteractivesConfiguration")
@interface InteractivesConfiguration : NSObject
/// Interactives picker configuration
@property (nonatomic, strong) InteractivesPickerConfiguration * _Nonnull interactivesPickerConfiguration;
/// Interactive test configuration
@property (nonatomic, strong) InteractiveTestConfiguration * _Nullable interactiveTestConfiguration;
/// Interactive question configuration
@property (nonatomic, strong) EditorQuestionConfiguration * _Nullable editorQuestionConfiguration;
/// Interactive poll configuration
@property (nonatomic, strong) InteractivePollConfiguration * _Nullable interactivePollConfiguration;
/// Interactive interest configuration
@property (nonatomic, strong) InteractiveInterestConfiguration * _Nullable interactiveInterestConfiguration;
/// Default configuration
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) InteractivesConfiguration * _Nonnull default_;)
+ (InteractivesConfiguration * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithInteractivesPickerConfiguration:(InteractivesPickerConfiguration * _Nonnull)interactivesPickerConfiguration interactiveTestConfiguration:(InteractiveTestConfiguration * _Nullable)interactiveTestConfiguration editorQuestionConfiguration:(EditorQuestionConfiguration * _Nullable)editorQuestionConfiguration interactivePollConfiguration:(InteractivePollConfiguration * _Nullable)interactivePollConfiguration interactiveInterestConfiguration:(InteractiveInterestConfiguration * _Nullable)interactiveInterestConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The Interactive picker configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK31InteractivesPickerConfiguration")
@interface InteractivesPickerConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OverlayAddButtonConfig;
@class OverlayEditButtonConfig;
@class OverlayControlButtonConfig;
@class UIColor;
@class UIFont;
@class OverlayItemConfiguration;
@class BackgroundConfiguration;
@class AlertViewConfiguration;

/// The Main overlay screen configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK31MainOverlayViewControllerConfig")
@interface MainOverlayViewControllerConfig : NSObject
- (nonnull instancetype)initWithEditButtons:(NSArray<OverlayAddButtonConfig *> * _Nullable)editButtons addButtons:(NSArray<OverlayAddButtonConfig *> * _Nonnull)addButtons editButtonsHeight:(CGFloat)editButtonsHeight editButtonsInteritemSpacing:(CGFloat)editButtonsInteritemSpacing editCompositionButtons:(NSArray<OverlayEditButtonConfig *> * _Nonnull)editCompositionButtons controlButtons:(NSArray<OverlayControlButtonConfig *> * _Nonnull)controlButtons playerControlsHeight:(CGFloat)playerControlsHeight mainLabelColors:(UIColor * _Nonnull)mainLabelColors additionalLabelColors:(UIColor * _Nonnull)additionalLabelColors additionalLabelFonts:(UIFont * _Nonnull)additionalLabelFonts cursorColor:(UIColor * _Nonnull)cursorColor audioWaveConfiguration:(OverlayItemConfiguration * _Nonnull)audioWaveConfiguration resizeImageName:(NSString * _Nonnull)resizeImageName draggersHorizontalInset:(CGFloat)draggersHorizontalInset draggersHeight:(CGFloat)draggersHeight backgroundConfiguration:(BackgroundConfiguration * _Nonnull)backgroundConfiguration playerControlsBackgroundConfiguration:(BackgroundConfiguration * _Nonnull)playerControlsBackgroundConfiguration defaultLinesCount:(NSInteger)defaultLinesCount timelineCornerRadius:(CGFloat)timelineCornerRadius draggerBackgroundColor:(UIColor * _Nonnull)draggerBackgroundColor timeLabelsOffset:(CGFloat)timeLabelsOffset itemsTopOffset:(CGFloat)itemsTopOffset alertConfig:(AlertViewConfiguration * _Nonnull)alertConfig OBJC_DESIGNATED_INITIALIZER;
/// Array of adding buttons
@property (nonatomic, copy) NSArray<OverlayAddButtonConfig *> * _Nullable editButtons SWIFT_UNAVAILABLE_MSG("'editButtons' has been renamed to 'addButtons'");
/// Array of adding buttons
@property (nonatomic, copy) NSArray<OverlayAddButtonConfig *> * _Nonnull addButtons;
/// Height for adding buttons’ container
@property (nonatomic) CGFloat editButtonsHeight;
/// Spacing between adding buttons
@property (nonatomic) CGFloat editButtonsInteritemSpacing;
/// Array of edit composition buttons
@property (nonatomic, copy) NSArray<OverlayEditButtonConfig *> * _Nonnull editCompositionButtons;
/// Array of control buttons
@property (nonatomic, copy) NSArray<OverlayControlButtonConfig *> * _Nonnull controlButtons;
/// Controls container height
@property (nonatomic) CGFloat playerControlsHeight;
/// Main labels title color
@property (nonatomic, strong) UIColor * _Nonnull mainLabelColors;
/// Additional labels title color
@property (nonatomic, strong) UIColor * _Nonnull additionalLabelColors;
/// Additional labels title font
@property (nonatomic, strong) UIFont * _Nonnull additionalLabelFonts;
/// Cursor color
@property (nonatomic, strong) UIColor * _Nonnull cursorColor;
/// OverlayItemConfiguration setups time line items styles
@property (nonatomic, strong) OverlayItemConfiguration * _Nonnull audioWaveConfiguration;
/// Image name setups resize draggers UIImage
@property (nonatomic, copy) NSString * _Nonnull resizeImageName;
/// Draggers horizontal inset
@property (nonatomic) CGFloat draggersHorizontalInset;
/// Draggers views’ height
@property (nonatomic) CGFloat draggersHeight;
/// BackgroundConfiguration setups background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
/// BackgroundConfiguration setups player controls background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull playerControlsBackgroundConfiguration;
/// Default number of time limes
@property (nonatomic) NSInteger defaultLinesCount;
/// Time line corner raduis
@property (nonatomic) CGFloat timelineCornerRadius;
/// Draggers views’ background color
@property (nonatomic, strong) UIColor * _Nonnull draggerBackgroundColor;
/// Time labels offset
@property (nonatomic) CGFloat timeLabelsOffset;
/// Top items offset
@property (nonatomic) CGFloat itemsTopOffset;
/// Configuration for alertView
@property (nonatomic, strong) AlertViewConfiguration * _Nonnull alertConfig;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


enum OverlayAddButtonConfigType : NSInteger;

/// The Overlay adding button configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK22OverlayAddButtonConfig")
@interface OverlayAddButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayAddButtonConfigType type;
/// Button title
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Button title color
@property (nonatomic, readonly, strong) UIColor * _Nonnull titleColor;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// ImageName setups UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// Additional init
/// \param type Type of the button
///
/// \param title Button title
///
/// \param titleColor Button title color
///
/// \param font Button title font
///
/// \param imageName ImageName setups UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayAddButtonConfigType)type title:(NSString * _Nonnull)title titleColor:(UIColor * _Nonnull)titleColor font:(UIFont * _Nonnull)font imageName:(NSString * _Nonnull)imageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayAddButtonConfigType, open) {
  OverlayAddButtonConfigTypeText = 0,
  OverlayAddButtonConfigTypeSticker = 1,
  OverlayAddButtonConfigTypeNan = 2,
};

enum OverlayControlButtonConfigType : NSInteger;

/// The Overlay control button configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK26OverlayControlButtonConfig")
@interface OverlayControlButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayControlButtonConfigType type;
/// ImageName setups normal UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// ImageName setups  selected UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nullable selectedImageName;
/// Button image Edge
/// Additional init
/// \param type Type of the button
///
/// \param imageName ImageName setups normal UIImage for additional button’s UIImageView
///
/// \param selectedImageName ImageName setups selected UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayControlButtonConfigType)type imageName:(NSString * _Nonnull)imageName selectedImageName:(NSString * _Nullable)selectedImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayControlButtonConfigType, open) {
  OverlayControlButtonConfigTypeReset = 0,
  OverlayControlButtonConfigTypePlay = 1,
  OverlayControlButtonConfigTypeDone = 2,
};

enum OverlayEditButtonConfigType : NSInteger;

SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK23OverlayEditButtonConfig")
@interface OverlayEditButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayEditButtonConfigType type;
/// Button title
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Button title color
@property (nonatomic, readonly, strong) UIColor * _Nonnull titleColor;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// ImageName setups normal UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// ImageName setups  selected UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nullable selectedImageName;
/// Additional init
/// \param type Type of the button
///
/// \param title Button title
///
/// \param titleColor Button title color
///
/// \param font Button title font
///
/// \param imageName ImageName setups normal UIImage for additional button’s UIImageView
///
/// \param selectedImageName ImageName setups selected UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayEditButtonConfigType)type title:(NSString * _Nonnull)title titleColor:(UIColor * _Nonnull)titleColor font:(UIFont * _Nonnull)font imageName:(NSString * _Nonnull)imageName selectedImageName:(NSString * _Nullable)selectedImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayEditButtonConfigType, open) {
  OverlayEditButtonConfigTypeEdit = 0,
  OverlayEditButtonConfigTypeDelete = 1,
};

enum OverlayEditCompositionButtonConfigType : NSInteger;

SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK34OverlayEditCompositionButtonConfig") SWIFT_UNAVAILABLE_MSG("'OverlayEditCompositionButtonConfig' has been renamed to '_TtC22BanubaOverlayEditorSDK23OverlayEditButtonConfig'")
@interface OverlayEditCompositionButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayEditCompositionButtonConfigType type;
/// Button title
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Button title color
@property (nonatomic, readonly, strong) UIColor * _Nonnull titleColor;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// ImageName setups normal UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// ImageName setups  selected UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nullable selectedImageName;
/// Additional init
/// \param type Type of the button
///
/// \param title Button title
///
/// \param titleColor Button title color
///
/// \param font Button title font
///
/// \param imageName ImageName setups normal UIImage for additional button’s UIImageView
///
/// \param selectedImageName ImageName setups selected UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayEditCompositionButtonConfigType)type title:(NSString * _Nonnull)title titleColor:(UIColor * _Nonnull)titleColor font:(UIFont * _Nonnull)font imageName:(NSString * _Nonnull)imageName selectedImageName:(NSString * _Nullable)selectedImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayEditCompositionButtonConfigType, open) {
  OverlayEditCompositionButtonConfigTypeEdit = 0,
  OverlayEditCompositionButtonConfigTypeDelete = 1,
};


/// The Overlay Editor namespace
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK13OverlayEditor")
@interface OverlayEditor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The text button configuration
SWIFT_CLASS("_TtCC22BanubaOverlayEditorSDK13OverlayEditor16TextButtonConfig")
@interface TextButtonConfig : NSObject
- (nonnull instancetype)initWithFont:(UIFont * _Nonnull)font color:(UIColor * _Nonnull)color title:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// Button title color
@property (nonatomic, strong) UIColor * _Nonnull color;
/// Button title
@property (nonatomic, copy) NSString * _Nonnull title;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OverlayItem;

/// The Overlay editor configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK26OverlayEditorConfiguration")
@interface OverlayEditorConfiguration : NSObject
/// MainOverlayViewControllerConfig setups main overlay screen
@property (nonatomic, strong) MainOverlayViewControllerConfig * _Nonnull mainOverlayViewControllerConfig;
/// Types of editing overlay items. Can be .text or .sticker
@property (nonatomic) enum OverlayAddButtonConfigType overlayType;
/// Selected overlay item. If nil passed overlay editor will be opened for creation a new one
@property (nonatomic, strong) id <OverlayItem> _Nullable selectedOverlayItem;
/// InteractivesConfiguration setups interactive views styles
@property (nonatomic, strong) InteractivesConfiguration * _Nullable interactivesConfig;
/// Default Configuration
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) OverlayEditorConfiguration * _Nonnull default_;)
+ (OverlayEditorConfiguration * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
/// Default Init
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Additional init
/// \param mainOverlayViewControllerConfig MainOverlayViewControllerConfig setups main overlay screen
///
- (nonnull instancetype)initWithMainOverlayViewControllerConfig:(MainOverlayViewControllerConfig * _Nonnull)mainOverlayViewControllerConfig overlayType:(enum OverlayAddButtonConfigType)overlayType selectedOverlayItem:(id <OverlayItem> _Nullable)selectedOverlayItem OBJC_DESIGNATED_INITIALIZER;
@end

enum OverlayEditorEditButtonConfigType : NSInteger;

SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK29OverlayEditorEditButtonConfig") SWIFT_UNAVAILABLE_MSG("'OverlayEditorEditButtonConfig' has been renamed to '_TtC22BanubaOverlayEditorSDK22OverlayAddButtonConfig'")
@interface OverlayEditorEditButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayEditorEditButtonConfigType type;
/// Button title
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Button title color
@property (nonatomic, readonly, strong) UIColor * _Nonnull titleColor;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// ImageName setups UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// Additional init
/// \param type Type of the button
///
/// \param title Button title
///
/// \param titleColor Button title color
///
/// \param font Button title font
///
/// \param imageName ImageName setups UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayEditorEditButtonConfigType)type title:(NSString * _Nonnull)title titleColor:(UIColor * _Nonnull)titleColor font:(UIFont * _Nonnull)font imageName:(NSString * _Nonnull)imageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayEditorEditButtonConfigType, open) {
  OverlayEditorEditButtonConfigTypeText = 0,
  OverlayEditorEditButtonConfigTypeSticker = 1,
};

@class UIImage;
@class OverlayItemPresentationStyle;

SWIFT_PROTOCOL("_TtP22BanubaOverlayEditorSDK11OverlayItem_")
@protocol OverlayItem
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, strong) UIImage * _Nonnull image;
@property (nonatomic) CMTime startTime;
@property (nonatomic) CMTime endTime;
@property (nonatomic, readonly, strong) OverlayItemPresentationStyle * _Nonnull presentationStyle;
@property (nonatomic, readonly) BOOL isEditable;
@property (nonatomic) CGRect frame;
@property (nonatomic) CGAffineTransform transform;
@property (nonatomic, readonly) enum OverlayAddButtonConfigType type;
@end


/// The Overaly time line item configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK24OverlayItemConfiguration")
@interface OverlayItemConfiguration : NSObject
- (nonnull instancetype)initWithBorderColor:(UIColor * _Nonnull)borderColor cornerRadius:(CGFloat)cornerRadius borderWidth:(CGFloat)borderWidth borderInset:(CGFloat)borderInset height:(CGFloat)height titleFont:(UIFont * _Nullable)titleFont titleColor:(UIColor * _Nullable)titleColor OBJC_DESIGNATED_INITIALIZER;
/// Border color
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
/// Corner radius
@property (nonatomic) CGFloat cornerRadius;
/// Border width
@property (nonatomic) CGFloat borderWidth;
/// Border Inset
@property (nonatomic) CGFloat borderInset;
/// Item height
@property (nonatomic) CGFloat height;
/// Item title font
@property (nonatomic, strong) UIFont * _Nullable titleFont;
/// Item title color
@property (nonatomic, strong) UIColor * _Nullable titleColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK28OverlayItemPresentationStyle")
@interface OverlayItemPresentationStyle : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OverlayItemPresentationStyle (SWIFT_EXTENSION(BanubaOverlayEditorSDK))
+ (OverlayItemPresentationStyle * _Nonnull)text:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
+ (OverlayItemPresentationStyle * _Nonnull)image:(UIImage * _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, OverlayItemPresentationStyleType, open) {
  OverlayItemPresentationStyleTypeText = 0,
  OverlayItemPresentationStyleTypeImage = 1,
};


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef BANUBAOVERLAYEDITORSDK_SWIFT_H
#define BANUBAOVERLAYEDITORSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import CoreMedia;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BanubaOverlayEditorSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif




/// The Interactive question configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK27EditorQuestionConfiguration")
@interface EditorQuestionConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class NSString;
@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK28EditorQuestionViewController")
@interface EditorQuestionViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






/// The Interactive interest configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK32InteractiveInterestConfiguration")
@interface InteractiveInterestConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The Interactive interest search provider
SWIFT_PROTOCOL("_TtP22BanubaOverlayEditorSDK27InteractiveInterestProvider_")
@protocol InteractiveInterestProvider
/// Search matching text
- (void)searchTitle:(NSString * _Nonnull)title;
/// Handler used to get searching result
@property (nonatomic, copy) void (^ _Nullable resultHandler)(NSArray<NSString *> * _Nonnull);
@end


SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK33InteractiveInterestViewController")
@interface InteractiveInterestViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;

@interface InteractiveInterestViewController (SWIFT_EXTENSION(BanubaOverlayEditorSDK)) <UITextFieldDelegate>
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
@end







SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK31InteractivePickerViewController")
@interface InteractivePickerViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



/// The Interactive poll configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK28InteractivePollConfiguration")
@interface InteractivePollConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK29InteractivePollViewController")
@interface InteractivePollViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end







/// The Interactive test configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK28InteractiveTestConfiguration")
@interface InteractiveTestConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK29InteractiveTestViewController")
@interface InteractiveTestViewController : UIViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end




@class UITextView;

@interface InteractiveTestViewController (SWIFT_EXTENSION(BanubaOverlayEditorSDK)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
- (void)textViewDidChangeSelection:(UITextView * _Nonnull)textView;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
@end



@class InteractivesPickerConfiguration;

/// The Interactives configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK25InteractivesConfiguration")
@interface InteractivesConfiguration : NSObject
/// Interactives picker configuration
@property (nonatomic, strong) InteractivesPickerConfiguration * _Nonnull interactivesPickerConfiguration;
/// Interactive test configuration
@property (nonatomic, strong) InteractiveTestConfiguration * _Nullable interactiveTestConfiguration;
/// Interactive question configuration
@property (nonatomic, strong) EditorQuestionConfiguration * _Nullable editorQuestionConfiguration;
/// Interactive poll configuration
@property (nonatomic, strong) InteractivePollConfiguration * _Nullable interactivePollConfiguration;
/// Interactive interest configuration
@property (nonatomic, strong) InteractiveInterestConfiguration * _Nullable interactiveInterestConfiguration;
/// Default configuration
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) InteractivesConfiguration * _Nonnull default_;)
+ (InteractivesConfiguration * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithInteractivesPickerConfiguration:(InteractivesPickerConfiguration * _Nonnull)interactivesPickerConfiguration interactiveTestConfiguration:(InteractiveTestConfiguration * _Nullable)interactiveTestConfiguration editorQuestionConfiguration:(EditorQuestionConfiguration * _Nullable)editorQuestionConfiguration interactivePollConfiguration:(InteractivePollConfiguration * _Nullable)interactivePollConfiguration interactiveInterestConfiguration:(InteractiveInterestConfiguration * _Nullable)interactiveInterestConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The Interactive picker configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK31InteractivesPickerConfiguration")
@interface InteractivesPickerConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class OverlayAddButtonConfig;
@class OverlayEditButtonConfig;
@class OverlayControlButtonConfig;
@class UIColor;
@class UIFont;
@class OverlayItemConfiguration;
@class BackgroundConfiguration;
@class AlertViewConfiguration;

/// The Main overlay screen configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK31MainOverlayViewControllerConfig")
@interface MainOverlayViewControllerConfig : NSObject
- (nonnull instancetype)initWithEditButtons:(NSArray<OverlayAddButtonConfig *> * _Nullable)editButtons addButtons:(NSArray<OverlayAddButtonConfig *> * _Nonnull)addButtons editButtonsHeight:(CGFloat)editButtonsHeight editButtonsInteritemSpacing:(CGFloat)editButtonsInteritemSpacing editCompositionButtons:(NSArray<OverlayEditButtonConfig *> * _Nonnull)editCompositionButtons controlButtons:(NSArray<OverlayControlButtonConfig *> * _Nonnull)controlButtons playerControlsHeight:(CGFloat)playerControlsHeight mainLabelColors:(UIColor * _Nonnull)mainLabelColors additionalLabelColors:(UIColor * _Nonnull)additionalLabelColors additionalLabelFonts:(UIFont * _Nonnull)additionalLabelFonts cursorColor:(UIColor * _Nonnull)cursorColor audioWaveConfiguration:(OverlayItemConfiguration * _Nonnull)audioWaveConfiguration resizeImageName:(NSString * _Nonnull)resizeImageName draggersHorizontalInset:(CGFloat)draggersHorizontalInset draggersHeight:(CGFloat)draggersHeight backgroundConfiguration:(BackgroundConfiguration * _Nonnull)backgroundConfiguration playerControlsBackgroundConfiguration:(BackgroundConfiguration * _Nonnull)playerControlsBackgroundConfiguration defaultLinesCount:(NSInteger)defaultLinesCount timelineCornerRadius:(CGFloat)timelineCornerRadius draggerBackgroundColor:(UIColor * _Nonnull)draggerBackgroundColor timeLabelsOffset:(CGFloat)timeLabelsOffset itemsTopOffset:(CGFloat)itemsTopOffset alertConfig:(AlertViewConfiguration * _Nonnull)alertConfig OBJC_DESIGNATED_INITIALIZER;
/// Array of adding buttons
@property (nonatomic, copy) NSArray<OverlayAddButtonConfig *> * _Nullable editButtons SWIFT_UNAVAILABLE_MSG("'editButtons' has been renamed to 'addButtons'");
/// Array of adding buttons
@property (nonatomic, copy) NSArray<OverlayAddButtonConfig *> * _Nonnull addButtons;
/// Height for adding buttons’ container
@property (nonatomic) CGFloat editButtonsHeight;
/// Spacing between adding buttons
@property (nonatomic) CGFloat editButtonsInteritemSpacing;
/// Array of edit composition buttons
@property (nonatomic, copy) NSArray<OverlayEditButtonConfig *> * _Nonnull editCompositionButtons;
/// Array of control buttons
@property (nonatomic, copy) NSArray<OverlayControlButtonConfig *> * _Nonnull controlButtons;
/// Controls container height
@property (nonatomic) CGFloat playerControlsHeight;
/// Main labels title color
@property (nonatomic, strong) UIColor * _Nonnull mainLabelColors;
/// Additional labels title color
@property (nonatomic, strong) UIColor * _Nonnull additionalLabelColors;
/// Additional labels title font
@property (nonatomic, strong) UIFont * _Nonnull additionalLabelFonts;
/// Cursor color
@property (nonatomic, strong) UIColor * _Nonnull cursorColor;
/// OverlayItemConfiguration setups time line items styles
@property (nonatomic, strong) OverlayItemConfiguration * _Nonnull audioWaveConfiguration;
/// Image name setups resize draggers UIImage
@property (nonatomic, copy) NSString * _Nonnull resizeImageName;
/// Draggers horizontal inset
@property (nonatomic) CGFloat draggersHorizontalInset;
/// Draggers views’ height
@property (nonatomic) CGFloat draggersHeight;
/// BackgroundConfiguration setups background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull backgroundConfiguration;
/// BackgroundConfiguration setups player controls background view style
@property (nonatomic, strong) BackgroundConfiguration * _Nonnull playerControlsBackgroundConfiguration;
/// Default number of time limes
@property (nonatomic) NSInteger defaultLinesCount;
/// Time line corner raduis
@property (nonatomic) CGFloat timelineCornerRadius;
/// Draggers views’ background color
@property (nonatomic, strong) UIColor * _Nonnull draggerBackgroundColor;
/// Time labels offset
@property (nonatomic) CGFloat timeLabelsOffset;
/// Top items offset
@property (nonatomic) CGFloat itemsTopOffset;
/// Configuration for alertView
@property (nonatomic, strong) AlertViewConfiguration * _Nonnull alertConfig;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


enum OverlayAddButtonConfigType : NSInteger;

/// The Overlay adding button configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK22OverlayAddButtonConfig")
@interface OverlayAddButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayAddButtonConfigType type;
/// Button title
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Button title color
@property (nonatomic, readonly, strong) UIColor * _Nonnull titleColor;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// ImageName setups UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// Additional init
/// \param type Type of the button
///
/// \param title Button title
///
/// \param titleColor Button title color
///
/// \param font Button title font
///
/// \param imageName ImageName setups UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayAddButtonConfigType)type title:(NSString * _Nonnull)title titleColor:(UIColor * _Nonnull)titleColor font:(UIFont * _Nonnull)font imageName:(NSString * _Nonnull)imageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayAddButtonConfigType, open) {
  OverlayAddButtonConfigTypeText = 0,
  OverlayAddButtonConfigTypeSticker = 1,
  OverlayAddButtonConfigTypeNan = 2,
};

enum OverlayControlButtonConfigType : NSInteger;

/// The Overlay control button configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK26OverlayControlButtonConfig")
@interface OverlayControlButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayControlButtonConfigType type;
/// ImageName setups normal UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// ImageName setups  selected UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nullable selectedImageName;
/// Button image Edge
/// Additional init
/// \param type Type of the button
///
/// \param imageName ImageName setups normal UIImage for additional button’s UIImageView
///
/// \param selectedImageName ImageName setups selected UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayControlButtonConfigType)type imageName:(NSString * _Nonnull)imageName selectedImageName:(NSString * _Nullable)selectedImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayControlButtonConfigType, open) {
  OverlayControlButtonConfigTypeReset = 0,
  OverlayControlButtonConfigTypePlay = 1,
  OverlayControlButtonConfigTypeDone = 2,
};

enum OverlayEditButtonConfigType : NSInteger;

SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK23OverlayEditButtonConfig")
@interface OverlayEditButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayEditButtonConfigType type;
/// Button title
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Button title color
@property (nonatomic, readonly, strong) UIColor * _Nonnull titleColor;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// ImageName setups normal UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// ImageName setups  selected UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nullable selectedImageName;
/// Additional init
/// \param type Type of the button
///
/// \param title Button title
///
/// \param titleColor Button title color
///
/// \param font Button title font
///
/// \param imageName ImageName setups normal UIImage for additional button’s UIImageView
///
/// \param selectedImageName ImageName setups selected UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayEditButtonConfigType)type title:(NSString * _Nonnull)title titleColor:(UIColor * _Nonnull)titleColor font:(UIFont * _Nonnull)font imageName:(NSString * _Nonnull)imageName selectedImageName:(NSString * _Nullable)selectedImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayEditButtonConfigType, open) {
  OverlayEditButtonConfigTypeEdit = 0,
  OverlayEditButtonConfigTypeDelete = 1,
};

enum OverlayEditCompositionButtonConfigType : NSInteger;

SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK34OverlayEditCompositionButtonConfig") SWIFT_UNAVAILABLE_MSG("'OverlayEditCompositionButtonConfig' has been renamed to '_TtC22BanubaOverlayEditorSDK23OverlayEditButtonConfig'")
@interface OverlayEditCompositionButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayEditCompositionButtonConfigType type;
/// Button title
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Button title color
@property (nonatomic, readonly, strong) UIColor * _Nonnull titleColor;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// ImageName setups normal UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// ImageName setups  selected UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nullable selectedImageName;
/// Additional init
/// \param type Type of the button
///
/// \param title Button title
///
/// \param titleColor Button title color
///
/// \param font Button title font
///
/// \param imageName ImageName setups normal UIImage for additional button’s UIImageView
///
/// \param selectedImageName ImageName setups selected UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayEditCompositionButtonConfigType)type title:(NSString * _Nonnull)title titleColor:(UIColor * _Nonnull)titleColor font:(UIFont * _Nonnull)font imageName:(NSString * _Nonnull)imageName selectedImageName:(NSString * _Nullable)selectedImageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayEditCompositionButtonConfigType, open) {
  OverlayEditCompositionButtonConfigTypeEdit = 0,
  OverlayEditCompositionButtonConfigTypeDelete = 1,
};


/// The Overlay Editor namespace
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK13OverlayEditor")
@interface OverlayEditor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The text button configuration
SWIFT_CLASS("_TtCC22BanubaOverlayEditorSDK13OverlayEditor16TextButtonConfig")
@interface TextButtonConfig : NSObject
- (nonnull instancetype)initWithFont:(UIFont * _Nonnull)font color:(UIColor * _Nonnull)color title:(NSString * _Nonnull)title OBJC_DESIGNATED_INITIALIZER;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// Button title color
@property (nonatomic, strong) UIColor * _Nonnull color;
/// Button title
@property (nonatomic, copy) NSString * _Nonnull title;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol OverlayItem;

/// The Overlay editor configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK26OverlayEditorConfiguration")
@interface OverlayEditorConfiguration : NSObject
/// MainOverlayViewControllerConfig setups main overlay screen
@property (nonatomic, strong) MainOverlayViewControllerConfig * _Nonnull mainOverlayViewControllerConfig;
/// Types of editing overlay items. Can be .text or .sticker
@property (nonatomic) enum OverlayAddButtonConfigType overlayType;
/// Selected overlay item. If nil passed overlay editor will be opened for creation a new one
@property (nonatomic, strong) id <OverlayItem> _Nullable selectedOverlayItem;
/// InteractivesConfiguration setups interactive views styles
@property (nonatomic, strong) InteractivesConfiguration * _Nullable interactivesConfig;
/// Default Configuration
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) OverlayEditorConfiguration * _Nonnull default_;)
+ (OverlayEditorConfiguration * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
/// Default Init
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Additional init
/// \param mainOverlayViewControllerConfig MainOverlayViewControllerConfig setups main overlay screen
///
- (nonnull instancetype)initWithMainOverlayViewControllerConfig:(MainOverlayViewControllerConfig * _Nonnull)mainOverlayViewControllerConfig overlayType:(enum OverlayAddButtonConfigType)overlayType selectedOverlayItem:(id <OverlayItem> _Nullable)selectedOverlayItem OBJC_DESIGNATED_INITIALIZER;
@end

enum OverlayEditorEditButtonConfigType : NSInteger;

SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK29OverlayEditorEditButtonConfig") SWIFT_UNAVAILABLE_MSG("'OverlayEditorEditButtonConfig' has been renamed to '_TtC22BanubaOverlayEditorSDK22OverlayAddButtonConfig'")
@interface OverlayEditorEditButtonConfig : NSObject
/// Type of the button
@property (nonatomic, readonly) enum OverlayEditorEditButtonConfigType type;
/// Button title
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
/// Button title color
@property (nonatomic, readonly, strong) UIColor * _Nonnull titleColor;
/// Button title font
@property (nonatomic, strong) UIFont * _Nonnull font;
/// ImageName setups UIImage for additional button’s UIImageView
@property (nonatomic, readonly, copy) NSString * _Nonnull imageName;
/// Additional init
/// \param type Type of the button
///
/// \param title Button title
///
/// \param titleColor Button title color
///
/// \param font Button title font
///
/// \param imageName ImageName setups UIImage for additional button’s UIImageView
///
- (nonnull instancetype)initWithType:(enum OverlayEditorEditButtonConfigType)type title:(NSString * _Nonnull)title titleColor:(UIColor * _Nonnull)titleColor font:(UIFont * _Nonnull)font imageName:(NSString * _Nonnull)imageName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

/// Main types enum
typedef SWIFT_ENUM(NSInteger, OverlayEditorEditButtonConfigType, open) {
  OverlayEditorEditButtonConfigTypeText = 0,
  OverlayEditorEditButtonConfigTypeSticker = 1,
};

@class UIImage;
@class OverlayItemPresentationStyle;

SWIFT_PROTOCOL("_TtP22BanubaOverlayEditorSDK11OverlayItem_")
@protocol OverlayItem
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, strong) UIImage * _Nonnull image;
@property (nonatomic) CMTime startTime;
@property (nonatomic) CMTime endTime;
@property (nonatomic, readonly, strong) OverlayItemPresentationStyle * _Nonnull presentationStyle;
@property (nonatomic, readonly) BOOL isEditable;
@property (nonatomic) CGRect frame;
@property (nonatomic) CGAffineTransform transform;
@property (nonatomic, readonly) enum OverlayAddButtonConfigType type;
@end


/// The Overaly time line item configuration
SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK24OverlayItemConfiguration")
@interface OverlayItemConfiguration : NSObject
- (nonnull instancetype)initWithBorderColor:(UIColor * _Nonnull)borderColor cornerRadius:(CGFloat)cornerRadius borderWidth:(CGFloat)borderWidth borderInset:(CGFloat)borderInset height:(CGFloat)height titleFont:(UIFont * _Nullable)titleFont titleColor:(UIColor * _Nullable)titleColor OBJC_DESIGNATED_INITIALIZER;
/// Border color
@property (nonatomic, strong) UIColor * _Nonnull borderColor;
/// Corner radius
@property (nonatomic) CGFloat cornerRadius;
/// Border width
@property (nonatomic) CGFloat borderWidth;
/// Border Inset
@property (nonatomic) CGFloat borderInset;
/// Item height
@property (nonatomic) CGFloat height;
/// Item title font
@property (nonatomic, strong) UIFont * _Nullable titleFont;
/// Item title color
@property (nonatomic, strong) UIColor * _Nullable titleColor;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC22BanubaOverlayEditorSDK28OverlayItemPresentationStyle")
@interface OverlayItemPresentationStyle : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface OverlayItemPresentationStyle (SWIFT_EXTENSION(BanubaOverlayEditorSDK))
+ (OverlayItemPresentationStyle * _Nonnull)text:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
+ (OverlayItemPresentationStyle * _Nonnull)image:(UIImage * _Nonnull)image SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, OverlayItemPresentationStyleType, open) {
  OverlayItemPresentationStyleTypeText = 0,
  OverlayItemPresentationStyleTypeImage = 1,
};


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
